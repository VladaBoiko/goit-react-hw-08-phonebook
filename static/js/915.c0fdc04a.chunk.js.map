{"version":3,"file":"static/js/915.c0fdc04a.chunk.js","mappings":"6UAEaA,GAAYC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,8FAKTE,GAAQF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,+WAcLI,GAAQJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,0QAcLM,EAAQN,EAAAA,GAAAA,MAAH,wDAGLO,EAASP,EAAAA,GAAAA,OAAH,mZAoBNQ,EAAQR,EAAAA,GAAAA,GAAH,wK,yHC9CZS,EAAa,CACjBC,KAAM,GACNC,MAAO,GACPC,SAAU,IAGCC,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAYjB,OACE,SAAC,KAAD,CAAQC,cAAeP,EAAYQ,SAZhB,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC9BL,GACEM,EAAAA,EAAAA,IAAS,CACPV,KAAMQ,EAAOR,KACbC,MAAOO,EAAOP,MACdC,SAAUM,EAAON,YAGrBO,GACD,EAGC,UACE,UAAC,KAAD,CAAOE,aAAa,MAApB,WACE,SAAC,KAAD,wBACA,UAAC,KAAD,CAAOC,QAAQ,OAAf,sBAEE,SAAC,KAAD,CACEC,KAAK,OACLb,KAAK,OACLc,QAAQ,yHACRC,MAAM,wIACNC,UAAQ,KAEV,SAAC,KAAD,CAAWhB,KAAK,OAAOiB,UAAU,UAEnC,UAAC,KAAD,CAAOL,QAAQ,QAAf,mBAEE,SAAC,KAAD,CAAOC,KAAK,OAAOb,KAAK,QAAQgB,UAAQ,KACxC,SAAC,KAAD,CAAWhB,KAAK,QAAQiB,UAAU,UAEpC,UAAC,KAAD,CAAOL,QAAQ,WAAf,sBAEE,SAAC,KAAD,CACEC,KAAK,WACLb,KAAK,WACLc,QAAQ,yHACRC,MAAM,wIACNC,UAAQ,KAEV,SAAC,KAAD,CAAWhB,KAAK,WAAWiB,UAAU,UAEvC,SAAC,KAAD,CAAQJ,KAAK,SAAb,0BAIP,ECjEKK,EAAS,CACbC,UAAW,CACTC,UAAW,qBACXC,QAAS,OACTC,WAAY,SACZC,eAAgB,UAElBR,MAAO,CACLS,WAAY,IACZC,SAAU,GACVC,UAAW,WAGA,SAASC,IACtB,OACE,gBAAKC,MAAOV,EAAOC,UAAnB,UACE,SAAChB,EAAD,KAGL,C","sources":["components/Form/Form.styled.js","components/RegisterForm/RegisterForm.jsx","pages/Register/Register.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\nexport const ErMessage = styled(ErrorMessage)`\n  font-size: 15px;\n  font-weight: bold;\n  color: rgb(201, 49, 42);\n`;\nexport const Input = styled(Field)`\n  display: block;\n  background-color: #fffab7;\n  margin-top: 15px;\n  margin-bottom: 40px;\n  min-width: 250px;\n  padding: 10px 20px;\n  border-top: 1px solid rgb(152, 154, 27);\n  border-left: 1px solid rgb(152, 154, 27);\n  border-right: 1px solid white;\n  border-bottom: 1px solid white;\n  color: rgb(50, 50, 29);\n  font-size: 18px;\n`;\nexport const Forma = styled(Form)`\n  background-color: rgb(206, 208, 70);\n  border: 1px solid rgb(152, 154, 27);\n  padding: 50px;\n  margin-top: 40px;\n  font-size: 30px;\n  font-weight: bold;\n  text-transform: uppercase;\n  color: rgb(87, 89, 11);\n  margin-bottom: 50px;\n`;\n// export const Input = styled(Field)`\n//   background-color: red;\n// `;\nexport const Label = styled.label`\n  /* background-color: red; */\n`;\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 10px 40px;\n  margin-left: auto;\n  margin-right: auto;\n  text-transform: uppercase;\n  font-size: 15px;\n  font-weight: bold;\n  background-color: #135600;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    background-color: #0f3305;\n  }\n`;\nexport const Title = styled.h1`\n  font-size: 35px;\n  font-weight: bold;\n  text-transform: uppercase;\n  color: #135600;\n  text-align: center;\n  text-decoration: underline;\n`;\n","import { useDispatch } from 'react-redux';\nimport { Formik } from 'formik';\nimport {\n  Input,\n  Forma,\n  Label,\n  Button,\n  ErMessage,\n  Title,\n} from '../Form/Form.styled';\nimport { register } from 'redux/authOperations';\n\nconst formValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(\n      register({\n        name: values.name,\n        email: values.email,\n        password: values.password,\n      })\n    );\n    resetForm();\n  };\n\n  return (\n    <Formik initialValues={formValues} onSubmit={handleSubmit}>\n      <Forma autoComplete=\"off\">\n        <Title>Register</Title>\n        <Label htmlFor=\"name\">\n          Username\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Not may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n          <ErMessage name=\"name\" component=\"p\" />\n        </Label>\n        <Label htmlFor=\"email\">\n          Email\n          <Input type=\"text\" name=\"email\" required />\n          <ErMessage name=\"email\" component=\"p\" />\n        </Label>\n        <Label htmlFor=\"password\">\n          Password\n          <Input\n            type=\"password\"\n            name=\"password\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Not may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n          <ErMessage name=\"password\" component=\"p\" />\n        </Label>\n        <Button type=\"submit\">Register</Button>\n      </Forma>\n    </Formik>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\nconst styles = {\n  container: {\n    minHeight: 'calc(100vh - 50px)',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontWeight: 500,\n    fontSize: 48,\n    textAlign: 'center',\n  },\n};\nexport default function Register() {\n  return (\n    <div style={styles.container}>\n      <RegisterForm />\n    </div>\n  );\n}\n"],"names":["ErMessage","styled","ErrorMessage","Input","Field","Forma","Form","Label","Button","Title","formValues","name","email","password","RegisterForm","dispatch","useDispatch","initialValues","onSubmit","values","resetForm","register","autoComplete","htmlFor","type","pattern","title","required","component","styles","container","minHeight","display","alignItems","justifyContent","fontWeight","fontSize","textAlign","Register","style"],"sourceRoot":""}