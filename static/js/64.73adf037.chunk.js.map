{"version":3,"file":"static/js/64.73adf037.chunk.js","mappings":"4UAEaA,GAAYC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,8FAKTE,GAAQF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,+WAcLI,GAAQJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,0QAcLM,EAAQN,EAAAA,GAAAA,MAAH,wDAGLO,EAASP,EAAAA,GAAAA,OAAH,mZAoBNQ,EAAQR,EAAAA,GAAAA,GAAH,wK,oKClDZS,EAASC,EAAAA,KAAaC,MAAM,CAChCC,KAAMF,EAAAA,KAAaG,aAEfC,EAAa,CACjBF,KAAM,GACNG,OAAQ,IAGGC,EAAU,WACrB,IAAMC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvBC,GAAWC,EAAAA,EAAAA,MAsBjB,OACE,SAAC,KAAD,CACEC,cAAeR,EACfS,iBAAkBd,EAClBe,SAzBiB,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAE5BT,EAASU,MAAMC,MACb,SAAAC,GAAO,OACLA,EAAQjB,KAAKkB,gBAAkBL,EAAOb,KAAKkB,cAAcC,MADpD,KAITC,EAAAA,OAAAA,QAAe,kDAGdf,EAASU,MAAMC,MACd,SAAAC,GAAO,OACLA,EAAQjB,KAAKkB,gBAAkBL,EAAOb,KAAKkB,cAAcC,MADpD,MAITX,GAASa,EAAAA,EAAAA,IAAYR,IACrBO,EAAAA,OAAAA,QAAe,oCAEjBN,GACD,EAGC,UAKE,UAAC,KAAD,CAAOQ,aAAa,MAApB,WACE,UAAC,KAAD,CAAOC,QAAQ,OAAf,kBAEE,SAAC,KAAD,CACEC,KAAK,OACLxB,KAAK,OACLyB,QAAQ,yHACRC,MAAM,yIACNzB,UAAQ,KAEV,SAAC,KAAD,CAAWD,KAAK,OAAO2B,UAAU,UAEnC,UAAC,KAAD,CAAOJ,QAAQ,SAAf,oBAEE,SAAC,KAAD,CACEC,KAAK,MACLxB,KAAK,SACLyB,QAAQ,yFACRC,MAAM,+FACNzB,UAAQ,KAEV,SAAC,KAAD,CAAWD,KAAK,SAAS2B,UAAU,UAErC,SAAC,KAAD,CAAQH,KAAK,SAAb,6BAIP,E,mBCvEY5B,EAAQR,EAAAA,GAAAA,GAAH,6FCALwC,EAAY,WACvB,OAAO,SAAChC,EAAD,uBACR,ECHYA,EAAQR,EAAAA,GAAAA,GAAH,oHCCLyC,EAAU,SAAC,GAAyB,IAAvBH,EAAsB,EAAtBA,MAAOI,EAAe,EAAfA,SAC/B,OACE,gCACE,SAAC,EAAD,UAAQJ,IACPI,IAGN,ECPYC,EAAO3C,EAAAA,GAAAA,GAAH,4QAYJO,EAASP,EAAAA,GAAAA,OAAH,qWCVN4C,EAAc,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,GAAIjC,EAAmB,EAAnBA,KAAMG,EAAa,EAAbA,OAChCK,GAAWC,EAAAA,EAAAA,MACjB,OACE,UAACsB,EAAD,YACE,0BAAO/B,KACP,0BAAOG,KACP,SAACR,EAAD,CAAQuC,QAAS,kBAAM1B,GAAS2B,EAAAA,EAAAA,IAAcF,GAA7B,EAAmCT,KAAK,SAAzD,sBAKL,ECdYY,EAAOhD,EAAAA,GAAAA,GAAH,kJ,UCuBJiD,EAAc,WACzB,IAAM7B,GAAWC,EAAAA,EAAAA,MACTM,GAAUT,EAAAA,EAAAA,IAAYC,EAAAA,IAAtBQ,OAERuB,EAAAA,EAAAA,YAAU,WACR9B,GAAS+B,EAAAA,EAAAA,MACV,GAAE,CAAC/B,IACJ,IACMgC,EAxBS,SAACnC,EAAUoC,GAC1B,IAAIC,EAAiB,KACrB,GAAe,KAAXD,EAEF,OADiBpC,EAGnB,IAAMsC,EAAmBF,EAAOvB,cAOhC,OANAwB,EAAiBrC,EAASoC,QAAO,SAAAxB,GAAO,OACtCA,EAAQjB,KAAKkB,cAAc0B,SAASD,EADE,KAGrBE,OAAS,GAC1BzB,EAAAA,OAAAA,QAAe,iBAEVsB,CACR,CAUyBI,CAAS/B,GADlBT,EAAAA,EAAAA,IAAYyC,EAAAA,IACoBN,QAC/C,OACE,UAACL,EAAD,WACGI,EAAgBQ,KAAI,SAAAC,GACnB,OACE,SAACjB,EAAD,CACEhC,KAAMiD,EAAMjD,KAEZG,OAAQ8C,EAAM9C,OACd8B,GAAIgB,EAAMhB,IAFLgB,EAAMhB,GAKhB,IAAG,MAGT,E,UC7CY3C,EAAQF,EAAAA,GAAAA,MAAH,8WAcLM,EAAQN,EAAAA,GAAAA,MAAH,2HCVL8D,EAAS,WACpB,IAAMT,GAASnC,EAAAA,EAAAA,IAAYyC,EAAAA,IACrBvC,GAAWC,EAAAA,EAAAA,MAIjB,OACE,UAACf,EAAD,4BAEE,SAACJ,EAAD,CAAOkC,KAAK,OAAO2B,MAAOV,EAAOA,OAAQW,SANxB,SAAAC,GACnB7C,GAAS8C,EAAAA,EAAAA,IAAUD,EAAEE,cAAcJ,OACpC,MAOF,ECZc,SAASK,IACtB,OACE,iBACEC,MAAO,CACLC,MAAO,SACPC,OAAQ,SACRC,QAAS,SACTC,QAAS,OACTC,cAAe,SACfC,WAAY,UAPhB,WAUE,SAACnC,EAAD,KACA,SAACxB,EAAD,KACA,SAAC8C,EAAD,KACA,SAACrB,EAAD,CAASH,MAAM,WAAf,UACE,SAACW,EAAD,QAIP,C","sources":["components/Form/Form.styled.js","components/Form/Form.jsx","components/MainTitle/MainTitle.styled.js","components/MainTitle/MainTitle.jsx","components/SectionWithTitle/SectionWithTitle.styled.js","components/SectionWithTitle/SectionWithTitle.jsx","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.jsx","components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\nexport const ErMessage = styled(ErrorMessage)`\n  font-size: 15px;\n  font-weight: bold;\n  color: rgb(201, 49, 42);\n`;\nexport const Input = styled(Field)`\n  display: block;\n  background-color: #fffab7;\n  margin-top: 15px;\n  margin-bottom: 40px;\n  min-width: 250px;\n  padding: 10px 20px;\n  border-top: 1px solid rgb(152, 154, 27);\n  border-left: 1px solid rgb(152, 154, 27);\n  border-right: 1px solid white;\n  border-bottom: 1px solid white;\n  color: rgb(50, 50, 29);\n  font-size: 18px;\n`;\nexport const Forma = styled(Form)`\n  background-color: rgb(206, 208, 70);\n  border: 1px solid rgb(152, 154, 27);\n  padding: 50px;\n  margin-top: 40px;\n  font-size: 30px;\n  font-weight: bold;\n  text-transform: uppercase;\n  color: rgb(87, 89, 11);\n  margin-bottom: 50px;\n`;\n// export const Input = styled(Field)`\n//   background-color: red;\n// `;\nexport const Label = styled.label`\n  /* background-color: red; */\n`;\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 10px 40px;\n  margin-left: auto;\n  margin-right: auto;\n  text-transform: uppercase;\n  font-size: 15px;\n  font-weight: bold;\n  background-color: #135600;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    background-color: #0f3305;\n  }\n`;\nexport const Title = styled.h1`\n  font-size: 35px;\n  font-weight: bold;\n  text-transform: uppercase;\n  color: #135600;\n  text-align: center;\n  text-decoration: underline;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { addContacts } from 'redux/operations';\nimport { getContacts } from 'redux/selectors';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { Input, Forma, Label, Button, ErMessage } from './Form.styled';\n\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n});\nconst formValues = {\n  name: '',\n  number: '',\n};\n\nexport const AddForm = () => {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n  const handleSubmit = (values, { resetForm }) => {\n    if (\n      contacts.items.some(\n        contact =>\n          contact.name.toLowerCase() === values.name.toLowerCase().trim()\n      )\n    ) {\n      Notify.failure('Such a contact exists in your contacts list...');\n    }\n    if (\n      !contacts.items.some(\n        contact =>\n          contact.name.toLowerCase() === values.name.toLowerCase().trim()\n      )\n    ) {\n      dispatch(addContacts(values));\n      Notify.success('Contact created? horraaaaaaaay)');\n    }\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={formValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <Forma autoComplete=\"off\">\n        <Label htmlFor=\"name\">\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n          <ErMessage name=\"name\" component=\"p\" />\n        </Label>\n        <Label htmlFor=\"number\">\n          Number\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n          <ErMessage name=\"number\" component=\"p\" />\n        </Label>\n        <Button type=\"submit\">Add contact</Button>\n      </Forma>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  text-transform: uppercase;\n  font-size: 40px;\n  color: #303403;\n`;\n","import { Title } from './MainTitle.styled';\n\nexport const MainTitle = () => {\n  return <Title>Phonebook</Title>;\n};\n","import styled from 'styled-components';\nexport const Title = styled.h2`\n  text-transform: uppercase;\n  font-size: 30px;\n  color: #303403;\n  text-align: center;\n`;\n","import { Title } from './SectionWithTitle.styled';\nimport PropTypes from 'prop-types';\nexport const Section = ({ title, children }) => {\n  return (\n    <section>\n      <Title>{title}</Title>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  font-size: 25px;\n  font-weight: bold;\n  text-transform: uppercase;\n  color: rgb(87, 89, 11);\n  border-bottom: 1px solid #000;\n  padding: 10px 0;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 30px;\n`;\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 5px 10px;\n  text-transform: uppercase;\n  font-size: 10px;\n  font-weight: bold;\n  background-color: #fa1b1b;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    background-color: #0f3305;\n  }\n`;\n","import { Item, Button } from './ContactItem.styled';\nimport { useDispatch } from 'react-redux';\n\nimport { deleteContact } from 'redux/operations';\nexport const ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  return (\n    <Item>\n      <span>{name}</span>\n      <span>{number}</span>\n      <Button onClick={() => dispatch(deleteContact(id))} type=\"button\">\n        Delete\n      </Button>\n    </Item>\n  );\n};\n","import styled from 'styled-components';\nexport const List = styled.ul`\n  list-style: circle;\n  font-size: 15px;\n  font-weight: bold;\n  text-transform: uppercase;\n  color: rgb(87, 89, 11);\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { getContacts, getFilter } from 'redux/selectors';\nimport { ContactItem } from '../ContactItem/ContactItem';\nimport { List } from './ContactsList.styled';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/operations';\n\nconst filtered = (contacts, filter) => {\n  let filterContacts = null;\n  if (filter === '') {\n    filterContacts = contacts;\n    return filterContacts;\n  }\n  const normalizedFilter = filter.toLowerCase();\n  filterContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n  if (filterContacts.length < 1) {\n    Notify.warning('No matches =(');\n  }\n  return filterContacts;\n};\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const { items } = useSelector(getContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  const filter = useSelector(getFilter);\n  const visibleContacts = filtered(items, filter.filter);\n  return (\n    <List>\n      {visibleContacts.map(state => {\n        return (\n          <ContactItem\n            name={state.name}\n            key={state.id}\n            number={state.number}\n            id={state.id}\n          />\n        );\n      })}{' '}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  display: block;\n  display: block;\n  background-color: #fffde9;\n  margin-top: 15px;\n  margin-bottom: 40px;\n  min-width: 350px;\n  padding: 10px 20px;\n  border-top: 1px solid rgb(152, 154, 27);\n  border-left: 1px solid rgb(152, 154, 27);\n  border-right: 1px solid white;\n  border-bottom: 1px solid white;\n  color: rgb(87, 89, 11);\n`;\nexport const Label = styled.label`\n  font-size: 30px;\n  font-weight: bold;\n  text-transform: uppercase;\n  color: rgb(87, 89, 11);\n`;\n","import { useSelector } from 'react-redux';\nimport { getFilter } from 'redux/selectors';\nimport { useDispatch } from 'react-redux';\nimport { addFilter } from 'redux/contactsSlice';\nimport { Input, Label } from './Filter.styled';\n\nexport const Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const changeFilter = e => {\n    dispatch(addFilter(e.currentTarget.value));\n  };\n  return (\n    <Label>\n      Enter name...\n      <Input type=\"text\" value={filter.filter} onChange={changeFilter}></Input>\n    </Label>\n  );\n};\n","import { AddForm } from 'components/Form/Form';\nimport { MainTitle } from 'components/MainTitle/MainTitle';\nimport { Section } from 'components/SectionWithTitle/SectionWithTitle';\nimport { ContactList } from 'components/ContactsList/ContactsList';\nimport { Filter } from 'components/Filter/Filter';\n\nexport default function Contacts() {\n  return (\n    <div\n      style={{\n        width: '1000px',\n        margin: '0 auto',\n        padding: '0 50px',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n      }}\n    >\n      <MainTitle />\n      <AddForm />\n      <Filter />\n      <Section title=\"Contacts\">\n        <ContactList />\n      </Section>\n    </div>\n  );\n}\n"],"names":["ErMessage","styled","ErrorMessage","Input","Field","Forma","Form","Label","Button","Title","schema","yup","shape","name","required","formValues","number","AddForm","contacts","useSelector","getContacts","dispatch","useDispatch","initialValues","validationSchema","onSubmit","values","resetForm","items","some","contact","toLowerCase","trim","Notify","addContacts","autoComplete","htmlFor","type","pattern","title","component","MainTitle","Section","children","Item","ContactItem","id","onClick","deleteContact","List","ContactList","useEffect","fetchContacts","visibleContacts","filter","filterContacts","normalizedFilter","includes","length","filtered","getFilter","map","state","Filter","value","onChange","e","addFilter","currentTarget","Contacts","style","width","margin","padding","display","flexDirection","alignItems"],"sourceRoot":""}